<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:PlantUML="PlantUML">
  <PlantUML:Model>
    <element xsi:type="PlantUML:StateDiagram">
      <skinparams>
        <commentsBefore>hide empty description
skinparam shadowing false
skinparam &lt;&lt;junction>>stateBackgroundColor white
skinparam &lt;&lt;junction>>stateBorderColor white
skinparam defaultFontName DejaVu Sans
</commentsBefore>
      </skinparams>
      <region>
        <elements xsi:type="PlantUML:State" name="Buttons" longName="Buttons">
          <regions>
            <elements xsi:type="PlantUML:State" name="CCIEnvironment_Buttons_SM_Buttons_R_Idle" longName="Idle"/>
            <elements xsi:type="PlantUML:ExternalTransition" source="/1" target="/0/@element.0/@region/@elements.0/@regions.0/@elements.0" isVertical="true"/>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), start);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), set);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), pause);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), resume);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), inc);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), dec);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.0/@regions.0/@elements.0">
              <trigger>
                <parts>buttonPressed</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envButtonsPort), stop);]]&lt;/font></effect>
            </elements>
          </regions>
        </elements>
        <elements xsi:type="PlantUML:State" name="Pedal" longName="Pedal">
          <regions>
            <elements xsi:type="PlantUML:State" name="CCIEnvironment_Pedal_SM_Pedal_R_Released" longName="Released"/>
            <elements xsi:type="PlantUML:State" name="CCIEnvironment_Pedal_SM_Pedal_R_Pressed" longName="Pressed"/>
            <elements xsi:type="PlantUML:ExternalTransition" source="/2" target="/0/@element.0/@region/@elements.1/@regions.0/@elements.0" isVertical="true"/>
            <elements xsi:type="PlantUML:ExternalTransition" source="/0/@element.0/@region/@elements.1/@regions.0/@elements.0" target="/0/@element.0/@region/@elements.1/@regions.0/@elements.1" isVertical="true">
              <guard>&lt;font color=red>[[#{missing ABCD body}UML_GpioReadBits(GET(this, port), GET(this, pin)) == 1]]&lt;/font></guard>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, pedalPeer), pedalPressed);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:ExternalTransition" source="/0/@element.0/@region/@elements.1/@regions.0/@elements.1" target="/0/@element.0/@region/@elements.1/@regions.0/@elements.0" isVertical="true">
              <guard>&lt;font color=red>[[#{missing ABCD body}UML_GpioReadBits(GET(this, port), GET(this, pin)) == 0]]&lt;/font></guard>
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, pedalPeer), pedalReleased);]]&lt;/font></effect>
            </elements>
          </regions>
        </elements>
        <elements xsi:type="PlantUML:State" name="Engine" longName="Engine">
          <regions>
            <elements xsi:type="PlantUML:State" name="CCIEnvironment_Engine_SM_Engine_R_Idle" longName="Idle"/>
            <elements xsi:type="PlantUML:ExternalTransition" source="/3" target="/0/@element.0/@region/@elements.2/@regions.0/@elements.0" isVertical="true">
              <effect>&lt;font color=red>[[#{missing ABCD body}UML_PwmInit(GET(this, timer), GET(this, channel));]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <effect>&lt;font color=red>[[#{missing ABCD body}SEND(GET(this, envSpeedPort), updateSpeed, GET(this, speed)); UML_PwmRun(GET(this, timer), GET(this, channel), GET(this, speed) / 2);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <trigger>
                <parts>updateSetPoint</parts>
              </trigger>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <trigger>
                <parts>controlOn</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}UML_PwmRun(GET(this, timer), GET(this, channel), GET(this, speed) / 2);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <trigger>
                <parts>controlOff</parts>
              </trigger>
              <effect>&lt;font color=red>[[#{missing ABCD body}UML_PwmStop(GET(this, timer), GET(this, channel));]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <guard>&lt;font color=red>[[#{missing ABCD body}GET(this, speed) &lt; 200]]&lt;/font></guard>
              <effect>&lt;font color=red>[[#{missing ABCD body}INC(this, speed, 1);]]&lt;/font></effect>
            </elements>
            <elements xsi:type="PlantUML:InternalTransition" state="/0/@element.0/@region/@elements.2/@regions.0/@elements.0">
              <guard>&lt;font color=red>[[#{missing ABCD body}GET(this, speed) > 0]]&lt;/font></guard>
              <effect>&lt;font color=red>[[#{missing ABCD body}DEC(this, speed, 1);]]&lt;/font></effect>
            </elements>
          </regions>
        </elements>
      </region>
    </element>
  </PlantUML:Model>
  <PlantUML:State name="[*]" longName="Initial"/>
  <PlantUML:State name="[*]" longName="Initial"/>
  <PlantUML:State name="[*]" longName="Initial"/>
</xmi:XMI>
